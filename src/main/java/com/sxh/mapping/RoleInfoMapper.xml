<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sxh.dao.RoleInfoMapper">
	<resultMap id="BaseResultMap" type="com.sxh.model.RoleInfo">
		<id column="RoleID" property="roleid" jdbcType="INTEGER" />
		<result column="RoleName" property="rolename" jdbcType="VARCHAR" />
		<result column="CreateTime" property="createtime" jdbcType="VARCHAR" />
		<result column="Status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="UserAuthMap" type="com.sxh.vo.UserAuthVo">
		<id column="UserID" property="userid" jdbcType="INTEGER" />
		<result column="NickName" property="nickname" jdbcType="VARCHAR" />
		<result column="RoleName" property="rolename" jdbcType="VARCHAR" />
		<result column="Regtime" property="regtime" jdbcType="VARCHAR" />
		<result column="Ptatus" property="status" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		RoleID, RoleName, CreateTime, Status
	</sql>
	<sql id="User_Auth_Vo_List">
		UserID, NickName,RoleName, RegTime, Ptatus
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from roleinfo
		where RoleID = #{roleid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		roleinfo
		where RoleID = #{roleid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.sxh.model.RoleInfo">
		insert into roleinfo (RoleID,
		RoleName, CreateTime,
		Status)
		values (#{roleid,jdbcType=INTEGER},
		#{rolename,jdbcType=VARCHAR},
		#{createtime,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.sxh.model.RoleInfo">
		insert into roleinfo
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				RoleID,
			</if>
			<if test="rolename != null">
				RoleName,
			</if>
			<if test="createtime != null">
				CreateTime,
			</if>
			<if test="status != null">
				Status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleid,jdbcType=INTEGER},
			</if>
			<if test="rolename != null">
				#{rolename,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.sxh.model.RoleInfo">
		update roleinfo
		<set>
			<if test="rolename != null">
				RoleName = #{rolename,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				CreateTime = #{createtime,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where RoleID = #{roleid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sxh.model.RoleInfo">
		update roleinfo
		set RoleName = #{rolename,jdbcType=VARCHAR},
		CreateTime =
		#{createtime,jdbcType=VARCHAR},
		Status = #{status,jdbcType=INTEGER}
		where RoleID = #{roleid,jdbcType=INTEGER}
	</update>
	<select id="getRoleInfoList" parameterType="com.sxh.model.RoleInfo"
		resultMap="BaseResultMap">
		select t.* from roleinfo t
		<where>
			<if test="rolename!= null and rolename!= '' ">
				RoleName Like #{rolename,jdbcType=VARCHAR}
			</if>
			<if test="status!= 2 and status!= '2' ">
				AND Status = #{status,jdbcType=INTEGER}
			</if>
		</where>
		order by RoleID asc
	</select>
	<select id="getUserAuthVoList" parameterType="com.sxh.vo.UserAuthVo"
		resultMap="UserAuthMap">
		select t.*
		from v_userauth t
		WHERE RoleID != 3
		<if test="rolename!= null and rolename!= '' ">
			AND RoleName Like #{rolename,jdbcType=VARCHAR}
		</if>
		<if test="status!= 2 and status!= '2' ">
			AND Ptatus = #{status,jdbcType=INTEGER}
		</if>
		<if test="nickname!= null and nickname!= '' ">
			AND NickName LIKE #{nickname,jdbcType=INTEGER}
		</if>
		order by t.Regtime desc
	</select>
</mapper>